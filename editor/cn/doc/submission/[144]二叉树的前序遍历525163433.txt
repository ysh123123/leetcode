/**
 * Definition for a binary tree node.*/
 //  struct TreeNode {
 //     int val;
 //      TreeNode *left;
 //      TreeNode *right;
 //      TreeNode() : val(0), left(nullptr), right(nullptr) {}
 //      explicit TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 //      TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 // };
class Solution {
public:
    void Traversal(TreeNode* node,std::vector<int> &result)
    {
        if(node==nullptr) return;
        result.emplace_back(node->val);
        Traversal(node->left,result);
        Traversal(node->right,result);
    }
    std::vector<int> preorderTraversal(TreeNode* root) {
         std::vector<int> result;
         Traversal(root,result);
        return result;
    }
};

//runtime:0 ms
//memory:9.7 MB
